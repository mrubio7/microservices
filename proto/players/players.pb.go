// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: proto/players.proto

package players

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32        `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Nickname string       `protobuf:"bytes,2,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	FaceitId string       `protobuf:"bytes,3,opt,name=FaceitId,proto3" json:"FaceitId,omitempty"`
	SteamId  string       `protobuf:"bytes,4,opt,name=SteamId,proto3" json:"SteamId,omitempty"`
	Avatar   string       `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Stats    *PlayerStats `protobuf:"bytes,6,opt,name=Stats,proto3" json:"Stats,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_proto_players_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Player) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Player) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

func (x *Player) GetSteamId() string {
	if x != nil {
		return x.SteamId
	}
	return ""
}

func (x *Player) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Player) GetStats() *PlayerStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type PlayerStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId               int32   `protobuf:"varint,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	KdRatio                float32 `protobuf:"fixed32,2,opt,name=KdRatio,proto3" json:"KdRatio,omitempty"`
	KrRatio                float32 `protobuf:"fixed32,3,opt,name=KrRatio,proto3" json:"KrRatio,omitempty"`
	KillsAverage           float32 `protobuf:"fixed32,4,opt,name=KillsAverage,proto3" json:"KillsAverage,omitempty"`
	DeathsAverage          float32 `protobuf:"fixed32,5,opt,name=DeathsAverage,proto3" json:"DeathsAverage,omitempty"`
	HeadshotPercentAverage float32 `protobuf:"fixed32,6,opt,name=HeadshotPercentAverage,proto3" json:"HeadshotPercentAverage,omitempty"`
	MVPAverage             float32 `protobuf:"fixed32,7,opt,name=MVPAverage,proto3" json:"MVPAverage,omitempty"`
	AssistAverage          float32 `protobuf:"fixed32,8,opt,name=AssistAverage,proto3" json:"AssistAverage,omitempty"`
	Elo                    int32   `protobuf:"varint,9,opt,name=Elo,proto3" json:"Elo,omitempty"`
}

func (x *PlayerStats) Reset() {
	*x = PlayerStats{}
	mi := &file_proto_players_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerStats) ProtoMessage() {}

func (x *PlayerStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerStats.ProtoReflect.Descriptor instead.
func (*PlayerStats) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerStats) GetPlayerId() int32 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerStats) GetKdRatio() float32 {
	if x != nil {
		return x.KdRatio
	}
	return 0
}

func (x *PlayerStats) GetKrRatio() float32 {
	if x != nil {
		return x.KrRatio
	}
	return 0
}

func (x *PlayerStats) GetKillsAverage() float32 {
	if x != nil {
		return x.KillsAverage
	}
	return 0
}

func (x *PlayerStats) GetDeathsAverage() float32 {
	if x != nil {
		return x.DeathsAverage
	}
	return 0
}

func (x *PlayerStats) GetHeadshotPercentAverage() float32 {
	if x != nil {
		return x.HeadshotPercentAverage
	}
	return 0
}

func (x *PlayerStats) GetMVPAverage() float32 {
	if x != nil {
		return x.MVPAverage
	}
	return 0
}

func (x *PlayerStats) GetAssistAverage() float32 {
	if x != nil {
		return x.AssistAverage
	}
	return 0
}

func (x *PlayerStats) GetElo() int32 {
	if x != nil {
		return x.Elo
	}
	return 0
}

type PlayerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *PlayerList) Reset() {
	*x = PlayerList{}
	mi := &file_proto_players_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerList) ProtoMessage() {}

func (x *PlayerList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerList.ProtoReflect.Descriptor instead.
func (*PlayerList) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{2}
}

func (x *PlayerList) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type PlayerLookingForTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32    `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	InGameRole   []string `protobuf:"bytes,2,rep,name=InGameRole,proto3" json:"InGameRole,omitempty"`
	TimeTable    string   `protobuf:"bytes,3,opt,name=TimeTable,proto3" json:"TimeTable,omitempty"`
	OldTeams     string   `protobuf:"bytes,4,opt,name=OldTeams,proto3" json:"OldTeams,omitempty"`
	PlayingYears int32    `protobuf:"varint,5,opt,name=PlayingYears,proto3" json:"PlayingYears,omitempty"`
	BornDate     int64    `protobuf:"varint,6,opt,name=BornDate,proto3" json:"BornDate,omitempty"`
	Description  string   `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`
	CreatedAt    int64    `protobuf:"varint,8,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt    int64    `protobuf:"varint,9,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Player       *Player  `protobuf:"bytes,10,opt,name=Player,proto3" json:"Player,omitempty"`
	FaceitId     string   `protobuf:"bytes,11,opt,name=FaceitId,proto3" json:"FaceitId,omitempty"`
}

func (x *PlayerLookingForTeam) Reset() {
	*x = PlayerLookingForTeam{}
	mi := &file_proto_players_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerLookingForTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLookingForTeam) ProtoMessage() {}

func (x *PlayerLookingForTeam) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLookingForTeam.ProtoReflect.Descriptor instead.
func (*PlayerLookingForTeam) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{3}
}

func (x *PlayerLookingForTeam) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PlayerLookingForTeam) GetInGameRole() []string {
	if x != nil {
		return x.InGameRole
	}
	return nil
}

func (x *PlayerLookingForTeam) GetTimeTable() string {
	if x != nil {
		return x.TimeTable
	}
	return ""
}

func (x *PlayerLookingForTeam) GetOldTeams() string {
	if x != nil {
		return x.OldTeams
	}
	return ""
}

func (x *PlayerLookingForTeam) GetPlayingYears() int32 {
	if x != nil {
		return x.PlayingYears
	}
	return 0
}

func (x *PlayerLookingForTeam) GetBornDate() int64 {
	if x != nil {
		return x.BornDate
	}
	return 0
}

func (x *PlayerLookingForTeam) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PlayerLookingForTeam) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PlayerLookingForTeam) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PlayerLookingForTeam) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *PlayerLookingForTeam) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

type PlayerLookingForTeamList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LookingForTeam []*PlayerLookingForTeam `protobuf:"bytes,1,rep,name=LookingForTeam,proto3" json:"LookingForTeam,omitempty"`
}

func (x *PlayerLookingForTeamList) Reset() {
	*x = PlayerLookingForTeamList{}
	mi := &file_proto_players_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerLookingForTeamList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLookingForTeamList) ProtoMessage() {}

func (x *PlayerLookingForTeamList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLookingForTeamList.ProtoReflect.Descriptor instead.
func (*PlayerLookingForTeamList) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerLookingForTeamList) GetLookingForTeam() []*PlayerLookingForTeam {
	if x != nil {
		return x.LookingForTeam
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_proto_players_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{5}
}

type DeleteLookingForTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=PlayerId,proto3" json:"PlayerId,omitempty"`
	UserId   int32  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *DeleteLookingForTeamRequest) Reset() {
	*x = DeleteLookingForTeamRequest{}
	mi := &file_proto_players_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLookingForTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLookingForTeamRequest) ProtoMessage() {}

func (x *DeleteLookingForTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLookingForTeamRequest.ProtoReflect.Descriptor instead.
func (*DeleteLookingForTeamRequest) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteLookingForTeamRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *DeleteLookingForTeamRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreatePlayerLookingForTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InGameRole   []string `protobuf:"bytes,2,rep,name=InGameRole,proto3" json:"InGameRole,omitempty"`
	TimeTable    string   `protobuf:"bytes,3,opt,name=TimeTable,proto3" json:"TimeTable,omitempty"`
	OldTeams     string   `protobuf:"bytes,4,opt,name=OldTeams,proto3" json:"OldTeams,omitempty"`
	PlayingYears int32    `protobuf:"varint,5,opt,name=PlayingYears,proto3" json:"PlayingYears,omitempty"`
	Description  string   `protobuf:"bytes,6,opt,name=Description,proto3" json:"Description,omitempty"`
	UserId       int32    `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId,omitempty"`
	FaceitId     string   `protobuf:"bytes,8,opt,name=FaceitId,proto3" json:"FaceitId,omitempty"`
}

func (x *CreatePlayerLookingForTeamRequest) Reset() {
	*x = CreatePlayerLookingForTeamRequest{}
	mi := &file_proto_players_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlayerLookingForTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerLookingForTeamRequest) ProtoMessage() {}

func (x *CreatePlayerLookingForTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerLookingForTeamRequest.ProtoReflect.Descriptor instead.
func (*CreatePlayerLookingForTeamRequest) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{7}
}

func (x *CreatePlayerLookingForTeamRequest) GetInGameRole() []string {
	if x != nil {
		return x.InGameRole
	}
	return nil
}

func (x *CreatePlayerLookingForTeamRequest) GetTimeTable() string {
	if x != nil {
		return x.TimeTable
	}
	return ""
}

func (x *CreatePlayerLookingForTeamRequest) GetOldTeams() string {
	if x != nil {
		return x.OldTeams
	}
	return ""
}

func (x *CreatePlayerLookingForTeamRequest) GetPlayingYears() int32 {
	if x != nil {
		return x.PlayingYears
	}
	return 0
}

func (x *CreatePlayerLookingForTeamRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePlayerLookingForTeamRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreatePlayerLookingForTeamRequest) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

type GetPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceitId []string `protobuf:"bytes,1,rep,name=FaceitId,proto3" json:"FaceitId,omitempty"`
}

func (x *GetPlayerRequest) Reset() {
	*x = GetPlayerRequest{}
	mi := &file_proto_players_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerRequest) ProtoMessage() {}

func (x *GetPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{8}
}

func (x *GetPlayerRequest) GetFaceitId() []string {
	if x != nil {
		return x.FaceitId
	}
	return nil
}

type GetPlayerByNicknameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
}

func (x *GetPlayerByNicknameRequest) Reset() {
	*x = GetPlayerByNicknameRequest{}
	mi := &file_proto_players_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPlayerByNicknameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPlayerByNicknameRequest) ProtoMessage() {}

func (x *GetPlayerByNicknameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPlayerByNicknameRequest.ProtoReflect.Descriptor instead.
func (*GetPlayerByNicknameRequest) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{9}
}

func (x *GetPlayerByNicknameRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type CreatePlayerByFaceitIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceitId string `protobuf:"bytes,1,opt,name=FaceitId,proto3" json:"FaceitId,omitempty"`
}

func (x *CreatePlayerByFaceitIdRequest) Reset() {
	*x = CreatePlayerByFaceitIdRequest{}
	mi := &file_proto_players_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePlayerByFaceitIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerByFaceitIdRequest) ProtoMessage() {}

func (x *CreatePlayerByFaceitIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerByFaceitIdRequest.ProtoReflect.Descriptor instead.
func (*CreatePlayerByFaceitIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePlayerByFaceitIdRequest) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

type ProminentPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Score    float32 `protobuf:"fixed32,2,opt,name=Score,proto3" json:"Score,omitempty"`
	Nickname string  `protobuf:"bytes,3,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	FaceitId string  `protobuf:"bytes,4,opt,name=Faceit_id,json=FaceitId,proto3" json:"Faceit_id,omitempty"`
	SteamId  string  `protobuf:"bytes,5,opt,name=Steam_id,json=SteamId,proto3" json:"Steam_id,omitempty"`
	Avatar   string  `protobuf:"bytes,6,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
}

func (x *ProminentPlayer) Reset() {
	*x = ProminentPlayer{}
	mi := &file_proto_players_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProminentPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProminentPlayer) ProtoMessage() {}

func (x *ProminentPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProminentPlayer.ProtoReflect.Descriptor instead.
func (*ProminentPlayer) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{11}
}

func (x *ProminentPlayer) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProminentPlayer) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProminentPlayer) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *ProminentPlayer) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

func (x *ProminentPlayer) GetSteamId() string {
	if x != nil {
		return x.SteamId
	}
	return ""
}

func (x *ProminentPlayer) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type ProminentPlayerList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players []*ProminentPlayer `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	Week    int32              `protobuf:"varint,2,opt,name=Week,proto3" json:"Week,omitempty"`
	Year    int32              `protobuf:"varint,3,opt,name=Year,proto3" json:"Year,omitempty"`
}

func (x *ProminentPlayerList) Reset() {
	*x = ProminentPlayerList{}
	mi := &file_proto_players_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProminentPlayerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProminentPlayerList) ProtoMessage() {}

func (x *ProminentPlayerList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_players_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProminentPlayerList.ProtoReflect.Descriptor instead.
func (*ProminentPlayerList) Descriptor() ([]byte, []int) {
	return file_proto_players_proto_rawDescGZIP(), []int{12}
}

func (x *ProminentPlayerList) GetPlayers() []*ProminentPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *ProminentPlayerList) GetWeek() int32 {
	if x != nil {
		return x.Week
	}
	return 0
}

func (x *ProminentPlayerList) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

var File_proto_players_proto protoreflect.FileDescriptor

var file_proto_players_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xae,
	0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x53, 0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22,
	0xb7, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x4b,
	0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x4b, 0x64,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x4b, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x4b, 0x69, 0x6c, 0x6c, 0x73, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x61, 0x74, 0x68, 0x73, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x44, 0x65, 0x61, 0x74,
	0x68, 0x73, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x48, 0x65, 0x61,
	0x64, 0x73, 0x68, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x48, 0x65, 0x61, 0x64, 0x73,
	0x68, 0x6f, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x56, 0x50, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x4d, 0x56, 0x50, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x41, 0x73, 0x73, 0x69, 0x73, 0x74,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x6c, 0x6f, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x45, 0x6c, 0x6f, 0x22, 0x37, 0x0a, 0x0a, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x49,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x6c, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f, 0x6c, 0x64,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67,
	0x59, 0x65, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50, 0x6c, 0x61,
	0x79, 0x69, 0x6e, 0x67, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x6f, 0x72,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x42, 0x6f, 0x72,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x22, 0x61, 0x0a, 0x18, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0e, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46,
	0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x0e, 0x4c, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x22, 0x07, 0x0a, 0x05, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x51, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x21, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46,
	0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4f,
	0x6c, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4f,
	0x6c, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x79, 0x69,
	0x6e, 0x67, 0x59, 0x65, 0x61, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x50,
	0x6c, 0x61, 0x79, 0x69, 0x6e, 0x67, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49,
	0x64, 0x22, 0x38, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x1d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x46, 0x61, 0x63,
	0x65, 0x69, 0x74, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53,
	0x74, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x71,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x65, 0x65,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x57, 0x65, 0x65, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x59, 0x65, 0x61,
	0x72, 0x32, 0xd3, 0x05, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x42, 0x79, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x43,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x69, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x79, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f,
	0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x61, 0x0a, 0x14, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x2a, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x49,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46,
	0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f,
	0x72, 0x54, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4c, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61,
	0x6d, 0x12, 0x24, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x46, 0x6f, 0x72, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x1e, 0x5a, 0x1c, 0x69, 0x62, 0x65, 0x72, 0x63,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x3b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_players_proto_rawDescOnce sync.Once
	file_proto_players_proto_rawDescData = file_proto_players_proto_rawDesc
)

func file_proto_players_proto_rawDescGZIP() []byte {
	file_proto_players_proto_rawDescOnce.Do(func() {
		file_proto_players_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_players_proto_rawDescData)
	})
	return file_proto_players_proto_rawDescData
}

var file_proto_players_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_players_proto_goTypes = []any{
	(*Player)(nil),                            // 0: players.Player
	(*PlayerStats)(nil),                       // 1: players.PlayerStats
	(*PlayerList)(nil),                        // 2: players.PlayerList
	(*PlayerLookingForTeam)(nil),              // 3: players.PlayerLookingForTeam
	(*PlayerLookingForTeamList)(nil),          // 4: players.PlayerLookingForTeamList
	(*Empty)(nil),                             // 5: players.Empty
	(*DeleteLookingForTeamRequest)(nil),       // 6: players.DeleteLookingForTeamRequest
	(*CreatePlayerLookingForTeamRequest)(nil), // 7: players.CreatePlayerLookingForTeamRequest
	(*GetPlayerRequest)(nil),                  // 8: players.GetPlayerRequest
	(*GetPlayerByNicknameRequest)(nil),        // 9: players.GetPlayerByNicknameRequest
	(*CreatePlayerByFaceitIdRequest)(nil),     // 10: players.CreatePlayerByFaceitIdRequest
	(*ProminentPlayer)(nil),                   // 11: players.ProminentPlayer
	(*ProminentPlayerList)(nil),               // 12: players.ProminentPlayerList
}
var file_proto_players_proto_depIdxs = []int32{
	1,  // 0: players.Player.Stats:type_name -> players.PlayerStats
	0,  // 1: players.PlayerList.players:type_name -> players.Player
	0,  // 2: players.PlayerLookingForTeam.Player:type_name -> players.Player
	3,  // 3: players.PlayerLookingForTeamList.LookingForTeam:type_name -> players.PlayerLookingForTeam
	11, // 4: players.ProminentPlayerList.players:type_name -> players.ProminentPlayer
	8,  // 5: players.PlayerService.GetPlayersByFaceitId:input_type -> players.GetPlayerRequest
	9,  // 6: players.PlayerService.GetPlayerByNickname:input_type -> players.GetPlayerByNicknameRequest
	5,  // 7: players.PlayerService.GetAllPlayers:input_type -> players.Empty
	5,  // 8: players.PlayerService.GetProminentPlayers:input_type -> players.Empty
	10, // 9: players.PlayerService.CreatePlayerFromFaceitId:input_type -> players.CreatePlayerByFaceitIdRequest
	7,  // 10: players.PlayerService.CreateLookingForTeam:input_type -> players.CreatePlayerLookingForTeamRequest
	7,  // 11: players.PlayerService.UpdateLookingForTeam:input_type -> players.CreatePlayerLookingForTeamRequest
	5,  // 12: players.PlayerService.GetAllLookingForTeam:input_type -> players.Empty
	6,  // 13: players.PlayerService.DeleteLookingForTeam:input_type -> players.DeleteLookingForTeamRequest
	2,  // 14: players.PlayerService.GetPlayersByFaceitId:output_type -> players.PlayerList
	0,  // 15: players.PlayerService.GetPlayerByNickname:output_type -> players.Player
	2,  // 16: players.PlayerService.GetAllPlayers:output_type -> players.PlayerList
	12, // 17: players.PlayerService.GetProminentPlayers:output_type -> players.ProminentPlayerList
	0,  // 18: players.PlayerService.CreatePlayerFromFaceitId:output_type -> players.Player
	3,  // 19: players.PlayerService.CreateLookingForTeam:output_type -> players.PlayerLookingForTeam
	3,  // 20: players.PlayerService.UpdateLookingForTeam:output_type -> players.PlayerLookingForTeam
	4,  // 21: players.PlayerService.GetAllLookingForTeam:output_type -> players.PlayerLookingForTeamList
	5,  // 22: players.PlayerService.DeleteLookingForTeam:output_type -> players.Empty
	14, // [14:23] is the sub-list for method output_type
	5,  // [5:14] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_players_proto_init() }
func file_proto_players_proto_init() {
	if File_proto_players_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_players_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_players_proto_goTypes,
		DependencyIndexes: file_proto_players_proto_depIdxs,
		MessageInfos:      file_proto_players_proto_msgTypes,
	}.Build()
	File_proto_players_proto = out.File
	file_proto_players_proto_rawDesc = nil
	file_proto_players_proto_goTypes = nil
	file_proto_players_proto_depIdxs = nil
}
