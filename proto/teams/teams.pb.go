// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: teams.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32      `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FaceitId  string     `protobuf:"bytes,2,opt,name=FaceitId,proto3" json:"FaceitId,omitempty"`
	Name      string     `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Nickname  string     `protobuf:"bytes,4,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	Avatar    string     `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Active    bool       `protobuf:"varint,6,opt,name=Active,proto3" json:"Active,omitempty"`
	PlayersId []string   `protobuf:"bytes,7,rep,name=PlayersId,proto3" json:"PlayersId,omitempty"`
	Stats     *TeamStats `protobuf:"bytes,8,opt,name=Stats,proto3" json:"Stats,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	mi := &file_teams_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{0}
}

func (x *Team) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Team) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Team) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Team) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Team) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Team) GetPlayersId() []string {
	if x != nil {
		return x.PlayersId
	}
	return nil
}

func (x *Team) GetStats() *TeamStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type TeamStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalMatches  int32                    `protobuf:"varint,1,opt,name=TotalMatches,proto3" json:"TotalMatches,omitempty"`
	Wins          int32                    `protobuf:"varint,2,opt,name=Wins,proto3" json:"Wins,omitempty"`
	Winrate       float32                  `protobuf:"fixed32,3,opt,name=Winrate,proto3" json:"Winrate,omitempty"`
	RecentResults []int32                  `protobuf:"varint,4,rep,packed,name=RecentResults,proto3" json:"RecentResults,omitempty"`
	MapStats      map[string]*TeamMapStats `protobuf:"bytes,5,rep,name=MapStats,proto3" json:"MapStats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TeamStats) Reset() {
	*x = TeamStats{}
	mi := &file_teams_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamStats) ProtoMessage() {}

func (x *TeamStats) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamStats.ProtoReflect.Descriptor instead.
func (*TeamStats) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{1}
}

func (x *TeamStats) GetTotalMatches() int32 {
	if x != nil {
		return x.TotalMatches
	}
	return 0
}

func (x *TeamStats) GetWins() int32 {
	if x != nil {
		return x.Wins
	}
	return 0
}

func (x *TeamStats) GetWinrate() float32 {
	if x != nil {
		return x.Winrate
	}
	return 0
}

func (x *TeamStats) GetRecentResults() []int32 {
	if x != nil {
		return x.RecentResults
	}
	return nil
}

func (x *TeamStats) GetMapStats() map[string]*TeamMapStats {
	if x != nil {
		return x.MapStats
	}
	return nil
}

type TeamMapStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapName string `protobuf:"bytes,1,opt,name=MapName,proto3" json:"MapName,omitempty"`
	WinRate int32  `protobuf:"varint,2,opt,name=WinRate,proto3" json:"WinRate,omitempty"`
	Matches int32  `protobuf:"varint,3,opt,name=Matches,proto3" json:"Matches,omitempty"`
}

func (x *TeamMapStats) Reset() {
	*x = TeamMapStats{}
	mi := &file_teams_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamMapStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMapStats) ProtoMessage() {}

func (x *TeamMapStats) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMapStats.ProtoReflect.Descriptor instead.
func (*TeamMapStats) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{2}
}

func (x *TeamMapStats) GetMapName() string {
	if x != nil {
		return x.MapName
	}
	return ""
}

func (x *TeamMapStats) GetWinRate() int32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *TeamMapStats) GetMatches() int32 {
	if x != nil {
		return x.Matches
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_teams_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{3}
}

type TeamList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Teams []*Team `protobuf:"bytes,1,rep,name=teams,proto3" json:"teams,omitempty"`
}

func (x *TeamList) Reset() {
	*x = TeamList{}
	mi := &file_teams_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TeamList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamList) ProtoMessage() {}

func (x *TeamList) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamList.ProtoReflect.Descriptor instead.
func (*TeamList) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{4}
}

func (x *TeamList) GetTeams() []*Team {
	if x != nil {
		return x.Teams
	}
	return nil
}

type GetTeamsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active bool `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *GetTeamsRequest) Reset() {
	*x = GetTeamsRequest{}
	mi := &file_teams_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeamsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamsRequest) ProtoMessage() {}

func (x *GetTeamsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamsRequest.ProtoReflect.Descriptor instead.
func (*GetTeamsRequest) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{5}
}

func (x *GetTeamsRequest) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type NewTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FaceitId string `protobuf:"bytes,1,opt,name=FaceitId,proto3" json:"FaceitId,omitempty"`
}

func (x *NewTeamRequest) Reset() {
	*x = NewTeamRequest{}
	mi := &file_teams_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTeamRequest) ProtoMessage() {}

func (x *NewTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teams_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTeamRequest.ProtoReflect.Descriptor instead.
func (*NewTeamRequest) Descriptor() ([]byte, []int) {
	return file_teams_proto_rawDescGZIP(), []int{6}
}

func (x *NewTeamRequest) GetFaceitId() string {
	if x != nil {
		return x.FaceitId
	}
	return ""
}

var File_teams_proto protoreflect.FileDescriptor

var file_teams_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x65, 0x61, 0x6d, 0x73, 0x22, 0xd8, 0x01, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22,
	0x91, 0x02, 0x0a, 0x09, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x57, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x57, 0x69, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x57, 0x69, 0x6e, 0x72, 0x61, 0x74, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x1a, 0x50, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x61, 0x70, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x5c, 0x0a, 0x0c, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x61, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x61, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x57, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x57, 0x69, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d, 0x0a, 0x08, 0x54, 0x65,
	0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x05, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x61, 0x63, 0x65, 0x69, 0x74,
	0x49, 0x64, 0x32, 0xa0, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x16,
	0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x15, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x74, 0x65, 0x61, 0x6d,
	0x73, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x07, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x61,
	0x6d, 0x12, 0x15, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x74, 0x65, 0x61, 0x6d, 0x73,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teams_proto_rawDescOnce sync.Once
	file_teams_proto_rawDescData = file_teams_proto_rawDesc
)

func file_teams_proto_rawDescGZIP() []byte {
	file_teams_proto_rawDescOnce.Do(func() {
		file_teams_proto_rawDescData = protoimpl.X.CompressGZIP(file_teams_proto_rawDescData)
	})
	return file_teams_proto_rawDescData
}

var file_teams_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_teams_proto_goTypes = []any{
	(*Team)(nil),            // 0: teams.Team
	(*TeamStats)(nil),       // 1: teams.TeamStats
	(*TeamMapStats)(nil),    // 2: teams.TeamMapStats
	(*Empty)(nil),           // 3: teams.Empty
	(*TeamList)(nil),        // 4: teams.TeamList
	(*GetTeamsRequest)(nil), // 5: teams.GetTeamsRequest
	(*NewTeamRequest)(nil),  // 6: teams.NewTeamRequest
	nil,                     // 7: teams.TeamStats.MapStatsEntry
}
var file_teams_proto_depIdxs = []int32{
	1, // 0: teams.Team.Stats:type_name -> teams.TeamStats
	7, // 1: teams.TeamStats.MapStats:type_name -> teams.TeamStats.MapStatsEntry
	0, // 2: teams.TeamList.teams:type_name -> teams.Team
	2, // 3: teams.TeamStats.MapStatsEntry.value:type_name -> teams.TeamMapStats
	5, // 4: teams.TeamService.GetTeams:input_type -> teams.GetTeamsRequest
	6, // 5: teams.TeamService.GetTeam:input_type -> teams.NewTeamRequest
	6, // 6: teams.TeamService.NewTeam:input_type -> teams.NewTeamRequest
	4, // 7: teams.TeamService.GetTeams:output_type -> teams.TeamList
	0, // 8: teams.TeamService.GetTeam:output_type -> teams.Team
	0, // 9: teams.TeamService.NewTeam:output_type -> teams.Team
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_teams_proto_init() }
func file_teams_proto_init() {
	if File_teams_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teams_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teams_proto_goTypes,
		DependencyIndexes: file_teams_proto_depIdxs,
		MessageInfos:      file_teams_proto_msgTypes,
	}.Build()
	File_teams_proto = out.File
	file_teams_proto_rawDesc = nil
	file_teams_proto_goTypes = nil
	file_teams_proto_depIdxs = nil
}
